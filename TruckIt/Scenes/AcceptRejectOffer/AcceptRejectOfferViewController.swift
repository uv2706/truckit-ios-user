//
//  AcceptRejectOfferViewController.swift
//  PickUpUser
//
//  Created by hb on 19/06/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AcceptRejectOfferDisplayLogic: class {
    func didReceiveAcceptRejectOffer(message: String, success: String)
}

class AcceptRejectOfferViewController: UIViewController {
    
    @IBOutlet weak var viewBg: UIView!
    @IBOutlet weak var btnAccept: UIButton!
    @IBOutlet weak var btnReject: UIButton!
    @IBOutlet weak var btnDriverProfile: UIButton!
    @IBOutlet weak var btnDescription: UILabel!
    @IBOutlet weak var lblAmount: UILabel!
    @IBOutlet weak var btnCancel: UIButton!
    
    var callBack: (()->())?
    var acceptCallBack: ((AcceptRejectOffer.Request)->())?
    var rejectCallBack: (()->())?
    
    var type = 1
    var offer: Offers.ViewModel?
    var pickDetail: PickUpDetail.ViewModel?
    var interactor: AcceptRejectOfferBusinessLogic?
    var router: (NSObjectProtocol & AcceptRejectOfferRoutingLogic & AcceptRejectOfferDataPassing)?
    
    var image = [String]()
    @IBOutlet weak var lblModel: UILabel!
    
    @IBOutlet weak var clnView: UICollectionView!
    @IBOutlet weak var lblLicence: UILabel!
    @IBOutlet weak var lblYear: UILabel!
    @IBOutlet weak var lblMake: UILabel!
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    /// Insatance
    ///
    /// - Returns: AcceptRejectOfferViewController
    class func instance() -> AcceptRejectOfferViewController? {
        return StoryBoard.AcceptRejectOffer.board.instantiateViewController(withIdentifier: AppClass.AcceptRejectOfferVc.rawValue) as? AcceptRejectOfferViewController
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = AcceptRejectOfferInteractor()
        let presenter = AcceptRejectOfferPresenter()
        let router = AcceptRejectOfferRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setUpLayout()
        setData()
        
    }
    
    /// Setup UI
    func setUpLayout() {
        self.viewBg.layer.cornerRadius = 5
        
        let yourAttributes : [NSAttributedString.Key: Any] = [
            NSAttributedString.Key.font : UIFont(name: "Montserrat-Regular", size: 15)!,
            NSAttributedString.Key.foregroundColor : #colorLiteral(red: 0, green: 0.4784313725, blue: 1, alpha: 1),
            NSAttributedString.Key.underlineStyle : NSUnderlineStyle.single.rawValue]
        
        let attributeString = NSMutableAttributedString(string: "View Driver Profile Here", attributes: yourAttributes)
        btnDriverProfile.setAttributedTitle(attributeString, for: UIControl.State())
    }
    
    /// Set Pick up details
    func setData() {
        if let offer = self.offer {
            self.lblAmount.text = "Amount: $\(GlobalUtility.shared.roundOffTextTwoDigit(offer.amount ?? "0.00"))"
            self.btnDescription.text = offer.message
            self.image = offer.image ?? [String]()
            self.lblMake.text = "Make: \(offer.make ?? "")"
            self.lblModel.text = "Model: \(offer.model ?? "")"
            self.lblYear.text = "Year: \(offer.year ?? "")"
            self.lblLicence.text = "Licence Plate No.: \(offer.licence ?? "")"
            self.clnView.reloadData()
        }
    }
    
    /// Dismiss alert
    ///
    /// - Parameter sender: UIButton
    @IBAction func btnDismissTapped(_ sender: UIButton) {
        self.dismiss(animated: true, completion: nil)
    }
    
    /// Accept offer tap action
    ///
    /// - Parameter sender: UIButton
    @IBAction func btnAcceptTapped(_ sender: UIButton) {
        if let offer = self.offer {
            let req = AcceptRejectOffer.Request(type: "Accept", offerId: offer.offerId ?? "", cardId: "")
            if self.acceptCallBack != nil {
                type = 1
                addAnayltics(analyticsParameterItemID: "id-acceptoffer", analyticsParameterItemName: "click_acceptoffer", analyticsParameterContentType: "click_acceptoffer")
                self.dismiss(animated: true, completion: nil)
                self.acceptCallBack!(req)
            }
        }
    }
    
    /// Reject offer tap action
    ///
    /// - Parameter sender: UIButton
    @IBAction func btnRejectTapped(_ sender: UIButton) {
        if let offer = self.offer {
                type = 0
            addAnayltics(analyticsParameterItemID: "id-rejectoffer", analyticsParameterItemName: "click_rejectoffer", analyticsParameterContentType: "click_rejectoffer")
            let req = AcceptRejectOffer.Request(type: "Reject", offerId: offer.offerId ?? "", cardId: "")
            self.interactor?.acceptRejectOrder(request: req)
        }
    }
    
    /// Driver profile view tap action
    ///
    /// - Parameter sender: UIButton
    @IBAction func btnDriverProfileTapped(_ sender: UIButton) {
        if self.callBack != nil {
            self.dismiss(animated: true, completion: nil)
            self.callBack!()
        }
    }
}

//UIcollectionview Methods
extension AcceptRejectOfferViewController:  UICollectionViewDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout {
    /// Method is called to get number of items to be displayed in collectionview
    ///
    /// - Parameters:
    ///   - collectionView: CollectionView
    ///   - section: Section
    /// - Returns: Return number of rows
    func collectionView(_ collectionView: UICollectionView, numberOfItemsInSection section: Int) -> Int {
            return image.count
    }
    
    /// Method is called to get cell for row at particular index
    ///
    /// - Parameters:
    ///   - collectionView: Collectionview
    ///   - indexPath: Indexpath
    /// - Returns: Return cell for indexpath
    func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        let cell = collectionView.dequeueReusableCell(withReuseIdentifier: "VehicleCell", for: indexPath) as! VehicleCell
        
        cell.imgView.setImage(with: image[indexPath.row], placeHolder: #imageLiteral(resourceName: "pushnotifications_icons"), completed: nil)
        cell.imgView.layer.cornerRadius = 5
        return cell
        
    }
    
    func collectionView(_ collectionView: UICollectionView, didSelectItemAt indexPath: IndexPath) {
        self.showImageDetailView(arrImage: [self.image[indexPath.row]],currentImage:indexPath.row )
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: 110, height: 110)
    }
}

extension AcceptRejectOfferViewController: AcceptRejectOfferDisplayLogic {
    func didReceiveAcceptRejectOffer(message: String, success: String) {
        if success == "1" {
            if type == 0 {
                if self.rejectCallBack != nil {
                    self.rejectCallBack!()
                    self.dismiss(animated: true, completion: nil)
                }
            }
            AppConstants.appDelegate.showTopMessage(message: message, type: .Success)
        } else {
            AppConstants.appDelegate.showTopMessage(message: message, type: .Error)
        }
    }
}
