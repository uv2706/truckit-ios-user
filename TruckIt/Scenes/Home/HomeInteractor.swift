//
//  HomeInteractor.swift
//  Udecide
//
//  Created by hb on 11/04/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol HomeBusinessLogic {
    func callNearPickUpAPI(request: Home.Request)
     func getConfig()
    func addRating()
    func editProfile(request: EditProfile.Request)

}

protocol HomeDataStore {
}

class HomeInteractor: HomeBusinessLogic, HomeDataStore {
    
    var presenter: HomePresentationLogic?
    var worker: HomeWorker?
    
    func callNearPickUpAPI(request: Home.Request) {
        worker = HomeWorker()
        worker?.getNearPickUpList(request: request, completionHandler: { (response, message, successCode) in
            self.presenter?.presentNearPickUpList(response: response, message: message ?? "", successCode: successCode ?? "0")
        })
    }
    
    func getConfig() {
        worker = HomeWorker()
        worker?.getConfig(completionHandler: { (response, message, success) in
            self.presenter?.getConfig(response: response, message: message ?? "", succes: success ?? "0")
        })
    }
    
    func addRating() {
        worker = HomeWorker()
        worker?.addRating(completionHandler: { (response, message, success) in
            self.presenter?.addRating(response: response, message: message ?? "", success: success ?? "0")
            
        })
    }
    
    func editProfile(request: EditProfile.Request) {
           worker = HomeWorker()
           worker?.editProfile(request: request, completionHandler: { (response, message, success) in
               self.presenter?.presentEditProfile(response: response, message: message ?? "", success: success ?? "0")
           })
       }
}
