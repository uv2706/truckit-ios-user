//
//  MessageModels.swift
//  PickUpDriver
//
//  Created by hb on 17/07/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

enum ReadMessage {
    struct Request {
        var pickUpId: String
    }
}

enum SendMessage {
    struct Request {
        var pickUpId: String
        var receiverId: String
        var Message: String
    }
}

enum PickupStatus {
    
    class ViewModel: WSResponseData {
        var pickupId: String?
        var pickupStatus: String?
        
        enum CodingKeys: String, CodingKey {
            case pickup_id
            case pickup_status
        }
        
        required init(from decoder: Decoder) throws {
            try super.init(from: decoder)
            let values = try decoder.container(keyedBy: CodingKeys.self)
            pickupId = try values.decodeIfPresent(String.self, forKey: .pickup_id)
            pickupStatus = try values.decodeIfPresent(String.self, forKey: .pickup_status)
        }
        
        public override func encode(to encoder: Encoder) throws {
            try super.encode(to: encoder)
            var container = encoder.container(keyedBy: CodingKeys.self)
            try container.encode(pickupId, forKey: .pickup_id )
            try container.encode(pickupStatus, forKey: .pickup_status )
        }
    }
}
