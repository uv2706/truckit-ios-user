//
//  OngoingProcessInteractor.swift
//  PickUpUser
//
//  Created by hb on 23/07/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol OngoingProcessBusinessLogic {
    func updateStatus(req: Process.Request)
    func pickUpDetail(request: PickUpDetail.Request, showLoader: Bool)
}

protocol OngoingProcessDataStore {
    
}

class OngoingProcessInteractor: OngoingProcessBusinessLogic, OngoingProcessDataStore {
    var presenter: OngoingProcessPresentationLogic?
    var worker: OngoingProcessWorker?
    
    func updateStatus(req: Process.Request) {
        worker = OngoingProcessWorker()
        worker?.updateStatus(request: req, completionHandler: { (message, success) in
            self.presenter?.presentPickUpstatus(message: message ?? "", success: success ?? "")
        })
    }
    
    func pickUpDetail(request: PickUpDetail.Request, showLoader: Bool) {
        worker = OngoingProcessWorker()
        worker?.details(request: request,showLoader: showLoader, completionHandler: { (response, message, success) in
            self.presenter?.presentDetails(response: response, message: message ?? "", success: success ?? "")
        })
    }
}
