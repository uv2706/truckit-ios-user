//
//  PaymentCardListingInteractor.swift
//  ForgetMeKnots
//
//  Created by hb on 23/05/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PaymentCardListingBusinessLogic {
    func removeCard(request: RemoveCard.Request)
    func cardList(Indicator: Bool)
    func acceptRejectOrder(request: AcceptRejectOffer.Request)
    func addTip(request: Tip.Request)
}

protocol PaymentCardListingDataStore {
    
}

class PaymentCardListingInteractor: PaymentCardListingBusinessLogic, PaymentCardListingDataStore {
    var presenter: PaymentCardListingPresentationLogic?
    var worker: PaymentCardListingWorker?
    
    func removeCard(request: RemoveCard.Request) {
        worker = PaymentCardListingWorker()
        worker?.removeCard( request: request, completionHandler: { (message, success) in
            self.presenter?.presentRemoveCard(message: message ?? "", success: success ?? "0")
        })
    }
    
    func cardList(Indicator:Bool) {
        worker = PaymentCardListingWorker()
        worker?.cardList(Indicator: Indicator, completionHandler: { (reponse, message, success) in
            self.presenter?.presentCardList(response: reponse, message: message ?? "", success: success ?? "0")
        })
    }
    
    func acceptRejectOrder(request: AcceptRejectOffer.Request) {
        worker = PaymentCardListingWorker()
        worker?.acceptRejectOfffer(request: request, completionHandler: { (message, success) in
            self.presenter?.presentAcceptRejectOffer(message: message ?? "", success: success ?? "0")
        })
    }
    
    func addTip(request: Tip.Request) {
        worker = PaymentCardListingWorker()
        worker?.addTip(request: request, completionHandler: { (message, success) in
            self.presenter?.presentAddTip(message: message ?? "", success: success ?? "0")
        })
    }
}
