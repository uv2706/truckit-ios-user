//
//  ReportUserInteractor.swift
//  PickUpUser
//
//  Created by hb on 03/07/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ReportUserBusinessLogic {
    func reportReason()
    func report(request: ReportUser.Request)
}

protocol ReportUserDataStore {
    
}

class ReportUserInteractor: ReportUserBusinessLogic, ReportUserDataStore {
    var presenter: ReportUserPresentationLogic?
    var worker: ReportUserWorker?
    
    func reportReason() {
        worker = ReportUserWorker()
        worker?.reportReason(completionHandler: { (response, message, success) in
            self.presenter?.presentReportReason(response: response, message: message ?? "", success: success ?? "0")
        })
    }
    
    func report(request: ReportUser.Request) {
        worker = ReportUserWorker()
        worker?.reportUser(request: request, completionHandler: { (message, success) in
            self.presenter?.presentReport(message: message ?? "", success:success ?? "0")
        })
    }
}

