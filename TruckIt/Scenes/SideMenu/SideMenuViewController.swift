//
//  SideMenuViewController.swift
//  AtlasGPS
//
//  Created by hb on 19/04/19.
//  Copyright (c) 2019 hb. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import SideMenu

protocol SideMenuDisplayLogic: class {
    func didReceiveLogoutResponse(message: String, success: String)
}

class SideMenuViewController: UIViewController {
   
    @IBOutlet weak var imgBg: UIImageView!
    @IBOutlet weak var btnProfileAdded: UIButton!
    @IBOutlet weak var btnProfile: UIButton!
    @IBOutlet weak var cntTopViewHeight: NSLayoutConstraint!
    @IBOutlet weak var lblUserName: UILabel!
    @IBOutlet weak var imgViewProfile: UIImageView!
    @IBOutlet weak var tblView: UITableView!

    
    var interactor: SideMenuBusinessLogic?
    var router: (NSObjectProtocol & SideMenuRoutingLogic & SideMenuDataPassing)?
    
    var arrTitle = ["Home","My Deliveries","Review & Ratings","Settings","Send a Feedback", "Logout"]
    var arrIcons = [#imageLiteral(resourceName: "home"),#imageLiteral(resourceName: "my_deliveries"),#imageLiteral(resourceName: "ratings"),#imageLiteral(resourceName: "setting"),#imageLiteral(resourceName: "send_feedback"),#imageLiteral(resourceName: "logout")]
    var arrIconsHighlight = [#imageLiteral(resourceName: "home_h"),#imageLiteral(resourceName: "my_deliveries_h"),#imageLiteral(resourceName: "ratings_h"),#imageLiteral(resourceName: "setting_h"),#imageLiteral(resourceName: "send_feedback_h"),#imageLiteral(resourceName: "logout_h")]
    var selectedIndex = 0

    class func instance() -> SideMenuViewController? {
        return StoryBoard.SideMenu.board.instantiateViewController(withIdentifier: AppClass.sideMenuVc.rawValue) as? SideMenuViewController
    }
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = SideMenuInteractor()
        let presenter = SideMenuPresenter()
        let router = SideMenuRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
     if #available(iOS 13.0, *) {
          overrideUserInterfaceStyle = .light
     } else {
          // Fallback on earlier versions
     }
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        self.navigationController?.isNavigationBarHidden = true
        setUserData()
    }
    
    /// Setup ui
    func setUserData() {
        //self.lblAppVersion.text = "App Version: \(GlobalUtility.shared.appVersion())"
        self.imgViewProfile.layer.cornerRadius = 40
        self.imgViewProfile.layer.borderWidth = 1
        self.imgViewProfile.layer.borderColor = #colorLiteral(red: 0.6549019608, green: 0.7058823529, blue: 0.8509803922, alpha: 1)
        
        btnProfileAdded.layer.borderWidth = 1
        btnProfileAdded.layer.borderColor = UIColor.white.cgColor
        btnProfileAdded.layer.cornerRadius = 12.5
        if let user = TruckItSessionHandler.shared.getLoggedUserDetails() {
            self.imgViewProfile.setImage(with: user.userProfile, placeHolder: #imageLiteral(resourceName: "sign_up_user"), completed: nil)
            self.lblUserName.text = "\(user.firstName ?? "") \(user.lastName ?? "")"
        }
        
        imgBg.backgroundColor = #colorLiteral(red: 0.03921568627, green: 0.09411764706, blue: 0.3450980392, alpha: 1)
        
        let aHeight : CGFloat = AppConstants.deviceName == "iPhoneX" ? 180 : 150
        self.cntTopViewHeight.constant = aHeight
        
    }
    
    /// Logout Action
    ///
    /// - Parameter sender: selected index
    @IBAction func btnLogoutTappedAction(_ sender: UIButton) {
        self.showLogoutAlert(message: AlertMessage.logoutConfirmation, okAction: {
            self.interactor?.logout()
        }, cancelAction: nil)
    }
}

extension SideMenuViewController: SideMenuDisplayLogic {
    func didReceiveLogoutResponse(message: String, success: String) {
        if success == "1" {
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: false, completion: nil)
            self.router?.Logout()
        } else {
            AppConstants.appDelegate.showTopMessage(message: message, type: .Error)
        }
    }
}

extension SideMenuViewController : UITableViewDelegate,UITableViewDataSource {
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let aCell  = tableView.dequeueReusableCell(withIdentifier: "Cell") as! SideMenuCell
        
        let aTitle = arrTitle[indexPath.row]
        let aImg = arrIcons [indexPath.row]
        let aImgHighlight = arrIconsHighlight[indexPath.row].withRenderingMode(.alwaysTemplate)
        
        aCell.btnTitle.setTitle(aTitle, for: .normal)
        aCell.btnTitle.setImage(aImg, for: .normal)
        aCell.btnTitle.setImage(aImgHighlight, for: .highlighted)
        aCell.btnTitle.setImage(aImgHighlight, for: .selected)
        aCell.btnTitle.setTitleColor(#colorLiteral(red: 0, green: 0.4784313725, blue: 1, alpha: 1), for: .highlighted)
        aCell.btnTitle.setTitleColor(#colorLiteral(red: 0, green: 0.4784313725, blue: 1, alpha: 1), for: .selected)
        aCell.btnTitle.setTitleColor(#colorLiteral(red: 0.1333333333, green: 0.1333333333, blue: 0.1333333333, alpha: 1), for: .normal)
        
        aCell.btnTitle.isSelected = (indexPath.row == self.selectedIndex)
        aCell.viewIndicator.isHidden = !(indexPath.row == self.selectedIndex)

        aCell.btnTapped = {index in
            let aIndex =  self.navigateToScreen(index: indexPath.row)
            self.selectedIndex = aIndex
            self.tblView.reloadData()
        }
        return aCell
    }
    
    /// Navigation to viewController from side menu
    ///
    /// - Parameter index: selected index
    /// - Returns: selected index
    func navigateToScreen(index:Int) -> Int {
        let rootVC = AppConstants.appDelegate.window?.rootViewController as! UINavigationController
        var returnIndex = 0
        switch index {
        case 0:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is HomeViewController) {
                let aNavController = rootVC
                if let homeVc = HomeViewController.instance() {
                    aNavController.viewControllers = [homeVc]
                }
            }
            returnIndex =  0
            break
        case 1:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is DeliveriesViewController) {
                let aNavController = rootVC
                if let delVC = DeliveriesViewController.instance() {
                    aNavController.viewControllers = [delVC]
                }
            }
            returnIndex =  1
            break
        case 2:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is ReviewAndRattingsViewController) {
                let aNavController = rootVC
                if let settingVc = ReviewAndRattingsViewController.instance() {
                    aNavController.viewControllers = [settingVc]
                }
            }
            returnIndex =  2
            break
        case 3:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is SettingsViewController) {
                let aNavController = rootVC
                if let settingVc = SettingsViewController.instance() {
                    aNavController.viewControllers = [settingVc]
                }
            }
            returnIndex =  3
            break
        case 4:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is ReportAProblemViewController) {
                let aNavController = rootVC
                if let report = ReportAProblemViewController.instance() {
                    aNavController.viewControllers = [report]
                }
            }
            returnIndex =  4
            break
        case 5:
            self.showLogoutAlert(message: AlertMessage.logoutConfirmation, okAction: {
                self.interactor?.logout()
            }, cancelAction: nil)
            returnIndex =  5
            break
        default:
            SideMenuManager.default.leftMenuNavigationController?.dismiss(animated: true, completion: nil)
            if !(rootVC.topViewController is HomeViewController) {
                let aNavController = rootVC
                if let homeVc = HomeViewController.instance() {
                    aNavController.viewControllers = [homeVc]
                }
            }
            returnIndex = 0
            break
        }

        return returnIndex
    
    }
    
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return arrTitle.count
    }

}

